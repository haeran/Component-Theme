{"ast":null,"code":"import _toConsumableArray from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/haeran/Documents/react/src/components/forms/FileUpload.js\";\n\nimport React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\n\nvar humanFileSize = function humanFileSize(bytes, si) {\n  var thresh = si ? 1000 : 1024;\n  if (Math.abs(bytes) < thresh) return bytes + ' B';\n  var units = si ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  var u = -1;\n\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n\n  return bytes.toFixed(1) + ' ' + units[u];\n};\n\nvar DropzoneContainer = function DropzoneContainer(props) {\n  var onDrop = function onDrop(acceptedFiles) {\n    acceptedFiles.forEach(function (file) {\n      if (!/\\.(jpe?g|png|gif)$/i.test(file.name)) return;\n      var reader = new FileReader();\n\n      reader.onabort = function () {\n        return console.log('file reading was aborted');\n      };\n\n      reader.onerror = function () {\n        return console.log('file reading has failed');\n      };\n\n      reader.onload = function () {\n        // Trigger callback\n        props.onDrop && props.onDrop({\n          name: file.name,\n          size: humanFileSize(file.size),\n          dataUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  var _useDropzone = useDropzone({\n    accept: 'image/*',\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      isDragAccept = _useDropzone.isDragAccept,\n      isDragReject = _useDropzone.isDragReject;\n\n  var className = 'text-center'; // Set paddings depending on file list is empty or not\n\n  className += !props.files.length ? ' p-5' : ' pt-3 pl-3'; // Define border color depending on status\n\n  if (isDragActive || isDragAccept) className += ' border-primary';else if (isDragReject) className += ' border-danger';else className += ' border-light'; // Dropzone container style\n\n  var style = {\n    border: '3px dashed',\n    outline: '0'\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: className,\n    style: style\n  }), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), !props.files.length && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-big text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"), !!props.files.length &&\n  /*#__PURE__*/\n  // Container\n  React.createElement(\"div\", {\n    className: \"d-flex align-items-start align-content-start flex-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, props.files.map(function (file) {\n    return (\n      /*#__PURE__*/\n      // File card\n      React.createElement(\"div\", {\n        className: \"card card-condenced mb-3 mr-3\",\n        style: {\n          width: '180px'\n        },\n        key: file.name,\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"mb-2\",\n        src: file.dataUrl,\n        alt: file.name,\n        style: {\n          width: '100%'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"font-weight-semibold text-left text-truncate\",\n        title: file.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, file.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-left small text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }, file.size)), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-danger btn-sm card-footer py-2\",\n        style: {\n          boxShadow: 'none',\n          borderLeft: 0,\n          borderRight: 0,\n          borderBottom: 0\n        },\n        onClick: function onClick() {\n          return props.onRemove && props.onRemove(file);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"Remove\"))\n    );\n  }))));\n};\n\nvar FileUpload = /*#__PURE__*/function (_Component) {\n  _inherits(FileUpload, _Component);\n\n  var _super = _createSuper(FileUpload);\n\n  function FileUpload(props) {\n    var _this2;\n\n    _classCallCheck(this, FileUpload);\n\n    _this2 = _super.call(this, props);\n    props.setTitle('File upload - Forms');\n    _this2.onFileDrop = _this2.onFileDrop.bind(_assertThisInitialized(_this2));\n    _this2.onFileRemove = _this2.onFileRemove.bind(_assertThisInitialized(_this2));\n    _this2.state = {\n      files: []\n    };\n    return _this2;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"onFileDrop\",\n    value: function onFileDrop(file) {\n      this.setState(function (state) {\n        return {\n          files: state.files.concat(file)\n        };\n      });\n    }\n  }, {\n    key: \"onFileRemove\",\n    value: function onFileRemove(file) {\n      this.setState(function (state) {\n        var files = _toConsumableArray(state.files);\n\n        files.splice(files.indexOf(file), 1);\n        return {\n          files: files\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"font-weight-bold py-3 mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, \"Forms /\"), \" File upload\"), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        as: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, \"react-dropzone\"), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-warning mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, \"react-dropzone\"), \" doesn't perform uploading on the server. You'll need to implement it on your own.\"), /*#__PURE__*/React.createElement(DropzoneContainer, {\n        files: this.state.files,\n        onDrop: this.onFileDrop,\n        onRemove: this.onFileRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return FileUpload;\n}(Component);\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/haeran/Documents/react/src/components/forms/FileUpload.js"],"names":["React","Component","Card","useDropzone","humanFileSize","bytes","si","thresh","Math","abs","units","u","length","toFixed","DropzoneContainer","props","onDrop","acceptedFiles","forEach","file","test","name","reader","FileReader","onabort","console","log","onerror","onload","size","dataUrl","result","readAsDataURL","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","className","files","style","border","outline","map","width","e","stopPropagation","boxShadow","borderLeft","borderRight","borderBottom","onRemove","FileUpload","setTitle","onFileDrop","bind","onFileRemove","state","setState","concat","splice","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\n\nconst humanFileSize = (bytes, si) => {\n  var thresh = si ? 1000 : 1024\n  if(Math.abs(bytes) < thresh) return bytes + ' B'\n  var units = si\n      ? ['kB','MB','GB','TB','PB','EB','ZB','YB']\n      : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB']\n  var u = -1\n  do {\n    bytes /= thresh\n    ++u\n  } while(Math.abs(bytes) >= thresh && u < units.length - 1)\n  return bytes.toFixed(1)+' '+units[u]\n}\n\nconst DropzoneContainer = (props) => {\n  const onDrop = acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      if (!/\\.(jpe?g|png|gif)$/i.test(file.name)) return\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Trigger callback\n        props.onDrop && props.onDrop({\n          name: file.name,\n          size: humanFileSize(file.size),\n          dataUrl: reader.result\n        })\n      }\n      reader.readAsDataURL(file)\n    })\n  }\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ accept: 'image/*', onDrop })\n\n  let className = 'text-center'\n\n  // Set paddings depending on file list is empty or not\n  className += !props.files.length ? ' p-5' : ' pt-3 pl-3'\n\n  // Define border color depending on status\n  if (isDragActive || isDragAccept) className += ' border-primary'\n  else if (isDragReject) className += ' border-danger'\n  else className += ' border-light'\n\n  // Dropzone container style\n  const style = {\n    border: '3px dashed',\n    outline: '0'\n  }\n\n  return (\n    <React.Fragment>\n      <div {...getRootProps({ className, style })}>\n        <input {...getInputProps()} />\n\n        {/* Don't show placeholder if the file list isn't empty */}\n        {!props.files.length && (\n          <div className=\"text-big text-muted\">Drag 'n' drop some files here, or click to select files</div>\n        )}\n\n        {/* Print files */}\n        {!!props.files.length && (\n          // Container\n          <div className=\"d-flex align-items-start align-content-start flex-wrap\">\n            {props.files.map(file => (\n              // File card\n              <div className=\"card card-condenced mb-3 mr-3\" style={{width: '180px'}} key={file.name} onClick={e => e.stopPropagation()}>\n                <div className=\"card-body\">\n                  <img className=\"mb-2\" src={file.dataUrl} alt={file.name} style={{width: '100%'}} />\n                  <div className=\"font-weight-semibold text-left text-truncate\" title={file.name}>{file.name}</div>\n                  <div className=\"text-left small text-muted\">{file.size}</div>\n                </div>\n                {/* Remove button */}\n                <button\n                  className=\"btn btn-outline-danger btn-sm card-footer py-2\"\n                  style={{boxShadow: 'none', borderLeft: 0, borderRight: 0, borderBottom: 0}}\n                  onClick={() => props.onRemove && props.onRemove(file)}\n                >Remove</button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  )\n}\n\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props)\n    props.setTitle('File upload - Forms')\n\n    this.onFileDrop = this.onFileDrop.bind(this)\n    this.onFileRemove = this.onFileRemove.bind(this)\n\n    this.state = {\n      files: []\n    }\n  }\n\n  onFileDrop(file) {\n    this.setState(state => ({\n      files: state.files.concat(file)\n    }))\n  }\n\n  onFileRemove(file) {\n    this.setState(state => {\n      const files = [...state.files]\n      files.splice(files.indexOf(file), 1)\n      return { files }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h4 className=\"font-weight-bold py-3 mb-4\">\n          <span className=\"text-muted font-weight-light\">Forms /</span> File upload\n        </h4>\n\n        <Card>\n          <Card.Header as=\"h6\">react-dropzone</Card.Header>\n          <Card.Body>\n            <div className=\"alert alert-warning mb-4\">\n              <strong>react-dropzone</strong> doesn't perform uploading on the server. You'll need to implement it on your own.\n            </div>\n\n            <DropzoneContainer files={this.state.files} onDrop={this.onFileDrop} onRemove={this.onFileRemove} />\n          </Card.Body>\n        </Card>\n\n      </div>\n    )\n  }\n}\n\nexport default FileUpload\n"]},"metadata":{},"sourceType":"module"}