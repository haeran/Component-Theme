{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar MdeToolbarButton_1 = require(\"./MdeToolbarButton\");\n\nvar defaultHeaderButtonProps = {\n  tabIndex: -1\n};\n\nvar MdeToolbarDropdown =\n/** @class */\nfunction (_super) {\n  __extends(MdeToolbarDropdown, _super);\n\n  function MdeToolbarDropdown(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handleGlobalClick = function (e) {\n      if (_this.clickedOutside(e)) {\n        _this.closeDropdown();\n      }\n    };\n\n    _this.openDropdown = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.clickedOutside = function (e) {\n      var target = e.target;\n      return _this.state.open && _this.dropdown && _this.dropdownOpener && !_this.dropdown.contains(target) && !_this.dropdownOpener.contains(target);\n    };\n\n    _this.handleOnClickCommand = function (e, command) {\n      var onCommand = _this.props.onCommand;\n      onCommand(command);\n\n      _this.closeDropdown();\n    };\n\n    _this.handleClick = function () {\n      if (!_this.state.open) _this.openDropdown();else _this.closeDropdown();\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  MdeToolbarDropdown.prototype.componentDidMount = function () {\n    document.addEventListener(\"click\", this.handleGlobalClick, false);\n  };\n\n  MdeToolbarDropdown.prototype.componentWillUnmount = function () {\n    document.removeEventListener(\"click\", this.handleGlobalClick, false);\n  };\n\n  MdeToolbarDropdown.prototype.closeDropdown = function () {\n    this.setState({\n      open: false\n    });\n  };\n\n  MdeToolbarDropdown.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        getIcon = _a.getIcon,\n        commands = _a.commands,\n        readOnly = _a.readOnly;\n    var open = this.state.open;\n    var items = commands.map(function (command, index) {\n      return React.createElement(MdeToolbarButton_1.MdeToolbarButton, {\n        key: \"header-item\" + index,\n        name: command.name,\n        buttonProps: command.buttonProps,\n        buttonContent: command.icon ? command.icon(getIcon) : getIcon(command.name),\n        onClick: function onClick(e) {\n          return _this.handleOnClickCommand(e, command);\n        },\n        readOnly: readOnly\n      });\n    });\n    var dropdown = open ? React.createElement(\"ul\", {\n      className: \"react-mde-dropdown\",\n      ref: function ref(_ref) {\n        _this.dropdown = _ref;\n      }\n    }, items) : null;\n    var _b = this.props,\n        buttonContent = _b.buttonContent,\n        buttonProps = _b.buttonProps;\n\n    var finalButtonProps = __assign({}, defaultHeaderButtonProps, buttonProps || {});\n\n    return React.createElement(\"li\", {\n      className: \"mde-header-item\"\n    }, React.createElement(\"button\", __assign({\n      type: \"button\"\n    }, finalButtonProps, {\n      ref: function ref(_ref2) {\n        _this.dropdownOpener = _ref2;\n      },\n      onClick: this.handleClick,\n      disabled: readOnly\n    }), buttonContent), dropdown);\n  };\n\n  return MdeToolbarDropdown;\n}(React.Component);\n\nexports.MdeToolbarDropdown = MdeToolbarDropdown;","map":null,"metadata":{},"sourceType":"script"}