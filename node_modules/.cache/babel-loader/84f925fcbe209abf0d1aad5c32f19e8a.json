{"ast":null,"code":"import _objectWithoutProperties from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/haeran/Documents/react/src/vendor/libs/hover-dropdown/HoverDropdown.js\";\nvar _excluded = [\"as\", \"timeout\", \"openOnHover\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nvar HoverDropdown = /*#__PURE__*/function (_Component) {\n  _inherits(HoverDropdown, _Component);\n\n  var _super = _createSuper(HoverDropdown);\n\n  function HoverDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, HoverDropdown);\n\n    _this = _super.call(this, props); // Bind instance\n\n    _this.onMouseEnter = _this.onMouseEnter.bind(_assertThisInitialized(_this));\n    _this.onMouseLeave = _this.onMouseLeave.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this)); // Get options\n\n    var as = props.as,\n        timeout = props.timeout,\n        openOnHover = props.openOnHover,\n        elOptions = _objectWithoutProperties(props, _excluded);\n\n    _this.options = {\n      timeout: timeout,\n      openOnHover: openOnHover,\n      as: as\n    };\n    _this.elOptions = elOptions; // Force remove option\n\n    delete _this.elOptions.show;\n    delete _this.elOptions.ref; // Set state\n\n    _this.state = {\n      show: false\n    }; // Hovered flag\n\n    _this.hovered = false;\n    return _this;\n  }\n\n  _createClass(HoverDropdown, [{\n    key: \"el\",\n    get: function get() {\n      if (this._el.tagName) return this._el;\n      return this._el = ReactDOM.findDOMNode(this._el);\n    } // Timeouts\n    //\n\n  }, {\n    key: \"createTimeout\",\n    value: function createTimeout() {\n      var _this2 = this;\n\n      this.resetTimeout();\n      this.timeoutId = setTimeout(function () {\n        return _this2.close();\n      }, this.options.timeout);\n    }\n  }, {\n    key: \"resetTimeout\",\n    value: function resetTimeout() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.resetTimeout();\n      this.setState({\n        show: true\n      }); // .dropdown menu element is not exists when the element is mounted,\n      // so get it after the menu is shown\n\n      if (!this.menu) {\n        this.menu = this.el.querySelector('.dropdown-menu');\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.resetTimeout();\n      this.setState({\n        show: false\n      });\n      this.hovered = false;\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter(e) {\n      if (!this.options.openOnHover) return;\n      if (e.target !== this.toggle && e.target !== this.menu) return;\n\n      if (e.target === this.toggle && !this.state.show) {\n        this.hovered = true;\n        this.toggle.focus();\n      }\n\n      this.open();\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave(e) {\n      if (e.target !== this.toggle && e.target !== this.menu || !this.hovered) return;\n      this.createTimeout();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      this.resetTimeout();\n      if (e.target !== this.toggle || !this.hovered) this.hovered = false;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.createTimeout();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      if (e.target === this.el) return;\n\n      if (e.target === this.toggle && !this.hovered) {\n        e.preventDefault();\n        this.state.show ? this.close() : this.open();\n      } else if (e.target !== this.toggle) this.close();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.toggle = this.el.querySelector('.dropdown-toggle');\n      this.el.addEventListener('mouseenter', this.onMouseEnter, true);\n      this.el.addEventListener('mouseleave', this.onMouseLeave, true);\n      this.el.addEventListener('focus', this.onFocus, true);\n      this.el.addEventListener('blur', this.onBlur, true);\n      this.el.addEventListener('click', this.onClick, true);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.resetTimeout();\n      this.el.removeEventListener('mouseenter', this.onMouseEnter, true);\n      this.el.removeEventListener('mouseleave', this.onMouseLeave, true);\n      this.el.removeEventListener('focus', this.onFocus, true);\n      this.el.removeEventListener('blur', this.onBlur, true);\n      this.el.removeEventListener('click', this.onClick, true);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(this.props.as, Object.assign({}, this.elOptions, {\n        show: this.state.show,\n        ref: function ref(el) {\n          return _this3._el = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return HoverDropdown;\n}(Component);\n\nHoverDropdown.propTypes = {\n  as: PropTypes.any.isRequired,\n  timeout: PropTypes.number,\n  openOnHover: PropTypes.bool\n};\nHoverDropdown.defaultProps = {\n  timeout: 150,\n  openOnHover: true\n};\nexport default HoverDropdown;","map":{"version":3,"sources":["/Users/haeran/Documents/react/src/vendor/libs/hover-dropdown/HoverDropdown.js"],"names":["React","Component","PropTypes","ReactDOM","HoverDropdown","props","onMouseEnter","bind","onMouseLeave","onFocus","onBlur","onClick","as","timeout","openOnHover","elOptions","options","show","ref","state","hovered","_el","tagName","findDOMNode","resetTimeout","timeoutId","setTimeout","close","clearTimeout","setState","menu","el","querySelector","e","target","toggle","focus","open","createTimeout","preventDefault","addEventListener","removeEventListener","propTypes","any","isRequired","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\n\nclass HoverDropdown extends Component {\n  constructor(props) {\n    super(props)\n\n    // Bind instance\n    this.onMouseEnter = this.onMouseEnter.bind(this)\n    this.onMouseLeave = this.onMouseLeave.bind(this)\n    this.onFocus = this.onFocus.bind(this)\n    this.onBlur = this.onBlur.bind(this)\n    this.onClick = this.onClick.bind(this)\n\n    // Get options\n    const { as, timeout, openOnHover, ...elOptions } = props\n    this.options = { timeout, openOnHover, as }\n\n    this.elOptions = elOptions\n\n    // Force remove option\n    delete this.elOptions.show\n    delete this.elOptions.ref\n\n    // Set state\n    this.state = {\n      show: false\n    }\n\n    // Hovered flag\n    this.hovered = false\n  }\n\n  get el() {\n    if (this._el.tagName) return this._el\n\n    return (\n      this._el = ReactDOM.findDOMNode(this._el)\n    )\n  }\n\n  // Timeouts\n  //\n\n  createTimeout() {\n    this.resetTimeout()\n    this.timeoutId = setTimeout(\n      () => this.close(),\n      this.options.timeout\n    )\n  }\n\n  resetTimeout() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId)\n      this.timeoutId = null\n    }\n  }\n\n  open() {\n    this.resetTimeout()\n    this.setState({ show: true })\n\n    // .dropdown menu element is not exists when the element is mounted,\n    // so get it after the menu is shown\n    if (!this.menu) {\n      this.menu = this.el.querySelector('.dropdown-menu')\n    }\n  }\n\n  close() {\n    this.resetTimeout()\n    this.setState({ show: false })\n    this.hovered = false\n  }\n\n  onMouseEnter(e) {\n    if (!this.options.openOnHover) return\n    if (e.target !== this.toggle && e.target !== this.menu) return\n\n    if (e.target === this.toggle && !this.state.show) {\n      this.hovered = true\n      this.toggle.focus()\n    }\n\n    this.open()\n  }\n\n  onMouseLeave(e) {\n    if ((e.target !== this.toggle && e.target !== this.menu) || !this.hovered) return\n    this.createTimeout()\n  }\n\n  onFocus(e) {\n    this.resetTimeout()\n    if (e.target !== this.toggle || !this.hovered)\n      this.hovered = false\n  }\n\n  onBlur() {\n    this.createTimeout()\n  }\n\n  onClick(e) {\n    if (e.target === this.el) return\n\n    if (e.target === this.toggle && !this.hovered) {\n      e.preventDefault()\n      this.state.show ? this.close() : this.open()\n    }\n\n    else if (e.target !== this.toggle)\n      this.close()\n  }\n\n  componentDidMount() {\n    this.toggle = this.el.querySelector('.dropdown-toggle')\n    this.el.addEventListener('mouseenter', this.onMouseEnter, true)\n    this.el.addEventListener('mouseleave', this.onMouseLeave, true)\n    this.el.addEventListener('focus', this.onFocus, true)\n    this.el.addEventListener('blur', this.onBlur, true)\n    this.el.addEventListener('click', this.onClick, true)\n  }\n\n  componentWillUnmount() {\n    this.resetTimeout()\n    this.el.removeEventListener('mouseenter', this.onMouseEnter, true)\n    this.el.removeEventListener('mouseleave', this.onMouseLeave, true)\n    this.el.removeEventListener('focus', this.onFocus, true)\n    this.el.removeEventListener('blur', this.onBlur, true)\n    this.el.removeEventListener('click', this.onClick, true)\n  }\n\n  render() {\n    return (\n      <this.props.as {...this.elOptions} show={this.state.show} ref={el => this._el = el} />\n    )\n  }\n}\n\nHoverDropdown.propTypes = {\n  as: PropTypes.any.isRequired,\n  timeout: PropTypes.number,\n  openOnHover: PropTypes.bool\n}\n\nHoverDropdown.defaultProps = {\n  timeout: 150,\n  openOnHover: true\n}\n\nexport default HoverDropdown\n"]},"metadata":{},"sourceType":"module"}