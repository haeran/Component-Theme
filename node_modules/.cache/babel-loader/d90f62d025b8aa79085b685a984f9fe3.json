{"ast":null,"code":"import _objectWithoutProperties from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/haeran/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/haeran/Documents/react/src/vendor/libs/mega-dropdown/MegaDropdown.js\";\nvar _excluded = [\"as\", \"timeout\", \"openOnHover\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nvar MegaDropdown = /*#__PURE__*/function (_Component) {\n  _inherits(MegaDropdown, _Component);\n\n  var _super = _createSuper(MegaDropdown);\n\n  function MegaDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, MegaDropdown);\n\n    _this = _super.call(this, props); // Bind instance\n\n    _this.onMouseEnter = _this.onMouseEnter.bind(_assertThisInitialized(_this));\n    _this.onMouseLeave = _this.onMouseLeave.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onDocumentClick = _this.onDocumentClick.bind(_assertThisInitialized(_this)); // Get options\n\n    var as = props.as,\n        timeout = props.timeout,\n        openOnHover = props.openOnHover,\n        elOptions = _objectWithoutProperties(props, _excluded);\n\n    _this.options = {\n      timeout: timeout,\n      openOnHover: openOnHover,\n      as: as\n    };\n    elOptions.className = (elOptions.className || '') + ' mega-dropdown';\n    _this.elOptions = elOptions; // Force remove option\n\n    delete _this.elOptions.show;\n    delete _this.elOptions.ref; // Set state\n\n    _this.state = {\n      show: false\n    }; // Hovered flag\n\n    _this.hovered = false;\n    _this.focused = false;\n    return _this;\n  }\n\n  _createClass(MegaDropdown, [{\n    key: \"el\",\n    get: function get() {\n      if (this._el.tagName) return this._el;\n      return this._el = ReactDOM.findDOMNode(this._el);\n    } // Timeouts\n    //\n\n  }, {\n    key: \"createTimeout\",\n    value: function createTimeout() {\n      var _this2 = this;\n\n      var ignoreFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.resetTimeout();\n      this.timeoutId = setTimeout(function () {\n        return _this2.close(false, ignoreFocus);\n      }, this.options.timeout);\n    }\n  }, {\n    key: \"resetTimeout\",\n    value: function resetTimeout() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.resetTimeout();\n      this.setState({\n        show: true\n      }); // .dropdown menu element is not exists when the element is mounted,\n      // so get it after the menu is shown\n\n      if (!this.menu) {\n        this.menu = this.el.querySelector('.dropdown-menu');\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var ignoreFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.resetTimeout();\n\n      if (force) {\n        this.hovered = false;\n        this.focused = false;\n      }\n\n      if (ignoreFocus) this.focused = false;\n      if (this.hovered || this.focused) return;\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter(e) {\n      if (e.target === this.menu) this.hovered = true;\n      if (!this.options.openOnHover) return;\n      if (e.target !== this.toggle && e.target !== this.menu) return;\n\n      if (e.target === this.toggle && !this.state.show) {\n        this.toggle.focus();\n      }\n\n      this.open();\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave(e) {\n      if (e.target === this.menu) this.hovered = false;\n      if (e.target !== this.toggle && e.target !== this.menu || !this.options.openOnHover) return;\n      this.createTimeout(true);\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.resetTimeout();\n      this.focused = true;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.focused = false;\n      this.createTimeout();\n    }\n  }, {\n    key: \"isMegaLink\",\n    value: function isMegaLink(el) {\n      while (!el.classList.contains('mega-dropdown') && !el.classList.contains('mega-link')) {\n        el = el.parentNode;\n      }\n\n      return !el.classList.contains('mega-dropdown');\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      if (e.target === this.el) return;\n\n      if (e.target === this.toggle && !this.options.openOnHover) {\n        e.preventDefault();\n        this.state.show ? this.close(false, true) : this.open();\n      } else if (e.target === this.toggle && this.options.openOnHover && !this.state.show) {\n        e.preventDefault();\n        this.open();\n      } else if (this.isMegaLink(e.target)) this.close(true);else if (e.target !== this.toggle) this.close();\n    }\n  }, {\n    key: \"onDocumentClick\",\n    value: function onDocumentClick(e) {\n      if (this.state.show && e.target !== this.toggle && e.target !== this.menu) this.close();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.toggle = this.el.querySelector('.dropdown-toggle');\n      this.el.addEventListener('mouseenter', this.onMouseEnter, true);\n      this.el.addEventListener('mouseleave', this.onMouseLeave, true);\n      this.el.addEventListener('focus', this.onFocus, true);\n      this.el.addEventListener('blur', this.onBlur, true);\n      this.el.addEventListener('click', this.onClick, true);\n      document.addEventListener('click', this.onDocumentClick, true);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.resetTimeout();\n      this.el.removeEventListener('mouseenter', this.onMouseEnter, true);\n      this.el.removeEventListener('mouseleave', this.onMouseLeave, true);\n      this.el.removeEventListener('focus', this.onFocus, true);\n      this.el.removeEventListener('blur', this.onBlur, true);\n      this.el.removeEventListener('click', this.onClick, true);\n      document.removeEventListener('click', this.onDocumentClick, true);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(this.props.as, Object.assign({}, this.elOptions, {\n        show: this.state.show,\n        ref: function ref(el) {\n          return _this3._el = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return MegaDropdown;\n}(Component);\n\nMegaDropdown.propTypes = {\n  as: PropTypes.any.isRequired,\n  timeout: PropTypes.number,\n  openOnHover: PropTypes.bool\n};\nMegaDropdown.defaultProps = {\n  timeout: 150,\n  openOnHover: false\n};\nexport default MegaDropdown;","map":{"version":3,"sources":["/Users/haeran/Documents/react/src/vendor/libs/mega-dropdown/MegaDropdown.js"],"names":["React","Component","PropTypes","ReactDOM","MegaDropdown","props","onMouseEnter","bind","onMouseLeave","onFocus","onBlur","onClick","onDocumentClick","as","timeout","openOnHover","elOptions","options","className","show","ref","state","hovered","focused","_el","tagName","findDOMNode","ignoreFocus","resetTimeout","timeoutId","setTimeout","close","clearTimeout","setState","menu","el","querySelector","force","e","target","toggle","focus","open","createTimeout","classList","contains","parentNode","preventDefault","isMegaLink","addEventListener","document","removeEventListener","propTypes","any","isRequired","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\n\nclass MegaDropdown extends Component {\n  constructor(props) {\n    super(props)\n\n    // Bind instance\n    this.onMouseEnter = this.onMouseEnter.bind(this)\n    this.onMouseLeave = this.onMouseLeave.bind(this)\n    this.onFocus = this.onFocus.bind(this)\n    this.onBlur = this.onBlur.bind(this)\n    this.onClick = this.onClick.bind(this)\n    this.onDocumentClick = this.onDocumentClick.bind(this)\n\n    // Get options\n    const { as, timeout, openOnHover, ...elOptions } = props\n    this.options = { timeout, openOnHover, as }\n\n    elOptions.className = (elOptions.className || '') + ' mega-dropdown'\n    this.elOptions = elOptions\n \n    // Force remove option\n    delete this.elOptions.show\n    delete this.elOptions.ref\n\n    // Set state\n    this.state = {\n      show: false\n    }\n\n    // Hovered flag\n    this.hovered = false\n    this.focused = false\n  }\n\n  get el() {\n    if (this._el.tagName) return this._el\n\n    return (\n      this._el = ReactDOM.findDOMNode(this._el)\n    )\n  }\n\n  // Timeouts\n  //\n\n  createTimeout(ignoreFocus = false) {\n    this.resetTimeout()\n    this.timeoutId = setTimeout(\n      () => this.close(false, ignoreFocus),\n      this.options.timeout\n    )\n  }\n\n  resetTimeout() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId)\n      this.timeoutId = null\n    }\n  }\n\n  open() {\n    this.resetTimeout()\n    this.setState({ show: true })\n\n    // .dropdown menu element is not exists when the element is mounted,\n    // so get it after the menu is shown\n    if (!this.menu) {\n      this.menu = this.el.querySelector('.dropdown-menu')\n    }\n  }\n\n  close(force = false, ignoreFocus = false) {\n    this.resetTimeout()\n    if (force) {\n      this.hovered = false\n      this.focused = false\n    }\n    if (ignoreFocus) this.focused = false\n    if (this.hovered || this.focused) return\n    this.setState({ show: false })\n  }\n\n  onMouseEnter(e) {\n    if (e.target === this.menu) this.hovered = true\n    if (!this.options.openOnHover) return\n    if (e.target !== this.toggle && e.target !== this.menu) return\n\n    if (e.target === this.toggle && !this.state.show) {\n      this.toggle.focus()\n    }\n\n    this.open()\n  }\n\n  onMouseLeave(e) {\n    if (e.target === this.menu) this.hovered = false\n    if ((e.target !== this.toggle && e.target !== this.menu) || !this.options.openOnHover) return\n    this.createTimeout(true)\n  }\n\n  onFocus() {\n    this.resetTimeout()\n    this.focused = true\n  }\n\n  onBlur() {\n    this.focused = false\n    this.createTimeout()\n  }\n\n  isMegaLink(el) {\n    while (!el.classList.contains('mega-dropdown') && !el.classList.contains('mega-link')) {\n      el = el.parentNode\n    }\n    return !el.classList.contains('mega-dropdown')\n  }\n\n  onClick(e) {\n    if (e.target === this.el) return\n\n    if (e.target === this.toggle && !this.options.openOnHover) {\n      e.preventDefault()\n      this.state.show ? this.close(false, true) : this.open()\n    }\n\n    else if (e.target === this.toggle && this.options.openOnHover && !this.state.show) {\n      e.preventDefault()\n      this.open()\n    }\n\n    else if (this.isMegaLink(e.target))\n      this.close(true)\n\n    else if (e.target !== this.toggle)\n      this.close()\n  }\n\n  onDocumentClick(e) {\n    if (this.state.show && e.target !== this.toggle && e.target !== this.menu)\n      this.close()\n  }\n\n  componentDidMount() {\n    this.toggle = this.el.querySelector('.dropdown-toggle')\n    this.el.addEventListener('mouseenter', this.onMouseEnter, true)\n    this.el.addEventListener('mouseleave', this.onMouseLeave, true)\n    this.el.addEventListener('focus', this.onFocus, true)\n    this.el.addEventListener('blur', this.onBlur, true)\n    this.el.addEventListener('click', this.onClick, true)\n    document.addEventListener('click', this.onDocumentClick, true)\n  }\n\n  componentWillUnmount() {\n    this.resetTimeout()\n    this.el.removeEventListener('mouseenter', this.onMouseEnter, true)\n    this.el.removeEventListener('mouseleave', this.onMouseLeave, true)\n    this.el.removeEventListener('focus', this.onFocus, true)\n    this.el.removeEventListener('blur', this.onBlur, true)\n    this.el.removeEventListener('click', this.onClick, true)\n    document.removeEventListener('click', this.onDocumentClick, true)\n  }\n\n  render() {\n    return (\n      <this.props.as {...this.elOptions} show={this.state.show} ref={el => this._el = el} />\n    )\n  }\n}\n\nMegaDropdown.propTypes = {\n  as: PropTypes.any.isRequired,\n  timeout: PropTypes.number,\n  openOnHover: PropTypes.bool\n}\n\nMegaDropdown.defaultProps = {\n  timeout: 150,\n  openOnHover: false\n}\n\nexport default MegaDropdown\n"]},"metadata":{},"sourceType":"module"}